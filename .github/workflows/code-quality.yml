name: Code Quality Checks

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Install analysis tools
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck clang-tidy shellcheck
      
      - name: Run cppcheck
        run: |
          cppcheck --enable=all --error-exitcode=1 --suppress=missingIncludeSystem \
            --inline-suppr --std=c11 -Iinclude src/*.c 2>&1 | tee cppcheck-report.txt
        continue-on-error: true
      
      - name: Run clang-tidy
        run: |
          clang-tidy src/*.c -- -Iinclude 2>&1 | tee clang-tidy-report.txt
        continue-on-error: true
      
      - name: Check shell scripts
        run: |
          shellcheck scripts/*.sh tests/*.sh || true
      
      - name: Upload analysis reports
        uses: actions/upload-artifact@v5
        with:
          name: static-analysis-reports
          path: |
            cppcheck-report.txt
            clang-tidy-report.txt
          retention-days: 30

  formatting-check:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
      
      - name: Check C code formatting
        run: |
          find src include -name '*.c' -o -name '*.h' | while read file; do
            echo "Checking $file"
            clang-format --dry-run --Werror "$file" || true
          done

  documentation-check:
    name: Documentation Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Check README links
        run: |
          if command -v markdown-link-check &> /dev/null; then
            markdown-link-check README.md || true
          else
            echo "markdown-link-check not available, skipping"
          fi
      
      - name: Validate documentation structure
        run: |
          echo "## Documentation Check" >> $GITHUB_STEP_SUMMARY
          echo "- README.md: $([ -f README.md ] && echo '✅' || echo '❌')" >> $GITHUB_STEP_SUMMARY
          echo "- .github/README.md: $([ -f .github/README.md ] && echo '✅' || echo '❌')" >> $GITHUB_STEP_SUMMARY
          echo "- Code comments: Checking..." >> $GITHUB_STEP_SUMMARY

  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Install lizard (complexity analyzer)
        run: |
          pip install lizard
      
      - name: Analyze code complexity
        run: |
          lizard src/ -l c --CCN 15 -w || true
      
      - name: Generate complexity report
        run: |
          lizard src/ -l c --html > complexity-report.html || true
      
      - name: Upload complexity report
        uses: actions/upload-artifact@v5
        with:
          name: complexity-report
          path: complexity-report.html
          retention-days: 30
